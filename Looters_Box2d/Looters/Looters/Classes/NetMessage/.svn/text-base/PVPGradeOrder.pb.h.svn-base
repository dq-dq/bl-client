// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PVPGradeOrder.proto

#ifndef PROTOBUF_PVPGradeOrder_2eproto__INCLUDED
#define PROTOBUF_PVPGradeOrder_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PVPGradeOrder_2eproto();
void protobuf_AssignDesc_PVPGradeOrder_2eproto();
void protobuf_ShutdownFile_PVPGradeOrder_2eproto();

class PVPGradeOrderRequest;
class PVPGradeOrderResponse;
class PVPGradeOrderResponse_PVPGradeOrderVO;

// ===================================================================

class PVPGradeOrderRequest : public ::google::protobuf::MessageLite {
 public:
  PVPGradeOrderRequest();
  virtual ~PVPGradeOrderRequest();
  
  PVPGradeOrderRequest(const PVPGradeOrderRequest& from);
  
  inline PVPGradeOrderRequest& operator=(const PVPGradeOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const PVPGradeOrderRequest& default_instance();
  
  void Swap(PVPGradeOrderRequest* other);
  
  // implements Message ----------------------------------------------
  
  PVPGradeOrderRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PVPGradeOrderRequest& from);
  void MergeFrom(const PVPGradeOrderRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string mailAddress = 1;
  inline bool has_mailaddress() const;
  inline void clear_mailaddress();
  static const int kMailAddressFieldNumber = 1;
  inline const ::std::string& mailaddress() const;
  inline void set_mailaddress(const ::std::string& value);
  inline void set_mailaddress(const char* value);
  inline void set_mailaddress(const char* value, size_t size);
  inline ::std::string* mutable_mailaddress();
  inline ::std::string* release_mailaddress();
  
  // @@protoc_insertion_point(class_scope:message.PVPGradeOrderRequest)
 private:
  inline void set_has_mailaddress();
  inline void clear_has_mailaddress();
  
  ::std::string* mailaddress_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PVPGradeOrder_2eproto();
  friend void protobuf_AssignDesc_PVPGradeOrder_2eproto();
  friend void protobuf_ShutdownFile_PVPGradeOrder_2eproto();
  
  void InitAsDefaultInstance();
  static PVPGradeOrderRequest* default_instance_;
};
// -------------------------------------------------------------------

class PVPGradeOrderResponse_PVPGradeOrderVO : public ::google::protobuf::MessageLite {
 public:
  PVPGradeOrderResponse_PVPGradeOrderVO();
  virtual ~PVPGradeOrderResponse_PVPGradeOrderVO();
  
  PVPGradeOrderResponse_PVPGradeOrderVO(const PVPGradeOrderResponse_PVPGradeOrderVO& from);
  
  inline PVPGradeOrderResponse_PVPGradeOrderVO& operator=(const PVPGradeOrderResponse_PVPGradeOrderVO& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const PVPGradeOrderResponse_PVPGradeOrderVO& default_instance();
  
  void Swap(PVPGradeOrderResponse_PVPGradeOrderVO* other);
  
  // implements Message ----------------------------------------------
  
  PVPGradeOrderResponse_PVPGradeOrderVO* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PVPGradeOrderResponse_PVPGradeOrderVO& from);
  void MergeFrom(const PVPGradeOrderResponse_PVPGradeOrderVO& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pvp_grade_order = 1;
  inline bool has_pvp_grade_order() const;
  inline void clear_pvp_grade_order();
  static const int kPvpGradeOrderFieldNumber = 1;
  inline ::google::protobuf::int32 pvp_grade_order() const;
  inline void set_pvp_grade_order(::google::protobuf::int32 value);
  
  // optional int32 pvp_order_change_flag = 2;
  inline bool has_pvp_order_change_flag() const;
  inline void clear_pvp_order_change_flag();
  static const int kPvpOrderChangeFlagFieldNumber = 2;
  inline ::google::protobuf::int32 pvp_order_change_flag() const;
  inline void set_pvp_order_change_flag(::google::protobuf::int32 value);
  
  // optional int32 pvp_order_change_count = 3;
  inline bool has_pvp_order_change_count() const;
  inline void clear_pvp_order_change_count();
  static const int kPvpOrderChangeCountFieldNumber = 3;
  inline ::google::protobuf::int32 pvp_order_change_count() const;
  inline void set_pvp_order_change_count(::google::protobuf::int32 value);
  
  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional string nickname = 5;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 5;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  
  // optional int32 pvp_grade = 6;
  inline bool has_pvp_grade() const;
  inline void clear_pvp_grade();
  static const int kPvpGradeFieldNumber = 6;
  inline ::google::protobuf::int32 pvp_grade() const;
  inline void set_pvp_grade(::google::protobuf::int32 value);
  
  // optional string mail_address = 7;
  inline bool has_mail_address() const;
  inline void clear_mail_address();
  static const int kMailAddressFieldNumber = 7;
  inline const ::std::string& mail_address() const;
  inline void set_mail_address(const ::std::string& value);
  inline void set_mail_address(const char* value);
  inline void set_mail_address(const char* value, size_t size);
  inline ::std::string* mutable_mail_address();
  inline ::std::string* release_mail_address();
  
  // @@protoc_insertion_point(class_scope:message.PVPGradeOrderResponse.PVPGradeOrderVO)
 private:
  inline void set_has_pvp_grade_order();
  inline void clear_has_pvp_grade_order();
  inline void set_has_pvp_order_change_flag();
  inline void clear_has_pvp_order_change_flag();
  inline void set_has_pvp_order_change_count();
  inline void clear_has_pvp_order_change_count();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_pvp_grade();
  inline void clear_has_pvp_grade();
  inline void set_has_mail_address();
  inline void clear_has_mail_address();
  
  ::google::protobuf::int32 pvp_grade_order_;
  ::google::protobuf::int32 pvp_order_change_flag_;
  ::google::protobuf::int32 pvp_order_change_count_;
  ::google::protobuf::int32 level_;
  ::std::string* nickname_;
  ::std::string* mail_address_;
  ::google::protobuf::int32 pvp_grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_PVPGradeOrder_2eproto();
  friend void protobuf_AssignDesc_PVPGradeOrder_2eproto();
  friend void protobuf_ShutdownFile_PVPGradeOrder_2eproto();
  
  void InitAsDefaultInstance();
  static PVPGradeOrderResponse_PVPGradeOrderVO* default_instance_;
};
// -------------------------------------------------------------------

class PVPGradeOrderResponse : public ::google::protobuf::MessageLite {
 public:
  PVPGradeOrderResponse();
  virtual ~PVPGradeOrderResponse();
  
  PVPGradeOrderResponse(const PVPGradeOrderResponse& from);
  
  inline PVPGradeOrderResponse& operator=(const PVPGradeOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const PVPGradeOrderResponse& default_instance();
  
  void Swap(PVPGradeOrderResponse* other);
  
  // implements Message ----------------------------------------------
  
  PVPGradeOrderResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PVPGradeOrderResponse& from);
  void MergeFrom(const PVPGradeOrderResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  typedef PVPGradeOrderResponse_PVPGradeOrderVO PVPGradeOrderVO;
  
  // accessors -------------------------------------------------------
  
  // optional sint32 result = 1 [default = 0];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional string info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  
  // repeated .message.PVPGradeOrderResponse.PVPGradeOrderVO pvp_grade_OrderVOList = 3;
  inline int pvp_grade_ordervolist_size() const;
  inline void clear_pvp_grade_ordervolist();
  static const int kPvpGradeOrderVOListFieldNumber = 3;
  inline const ::message::PVPGradeOrderResponse_PVPGradeOrderVO& pvp_grade_ordervolist(int index) const;
  inline ::message::PVPGradeOrderResponse_PVPGradeOrderVO* mutable_pvp_grade_ordervolist(int index);
  inline ::message::PVPGradeOrderResponse_PVPGradeOrderVO* add_pvp_grade_ordervolist();
  inline const ::google::protobuf::RepeatedPtrField< ::message::PVPGradeOrderResponse_PVPGradeOrderVO >&
      pvp_grade_ordervolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::message::PVPGradeOrderResponse_PVPGradeOrderVO >*
      mutable_pvp_grade_ordervolist();
  
  // @@protoc_insertion_point(class_scope:message.PVPGradeOrderResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_info();
  inline void clear_has_info();
  
  ::std::string* info_;
  ::google::protobuf::RepeatedPtrField< ::message::PVPGradeOrderResponse_PVPGradeOrderVO > pvp_grade_ordervolist_;
  ::google::protobuf::int32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_PVPGradeOrder_2eproto();
  friend void protobuf_AssignDesc_PVPGradeOrder_2eproto();
  friend void protobuf_ShutdownFile_PVPGradeOrder_2eproto();
  
  void InitAsDefaultInstance();
  static PVPGradeOrderResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// PVPGradeOrderRequest

// required string mailAddress = 1;
inline bool PVPGradeOrderRequest::has_mailaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPGradeOrderRequest::set_has_mailaddress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPGradeOrderRequest::clear_has_mailaddress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPGradeOrderRequest::clear_mailaddress() {
  if (mailaddress_ != &::google::protobuf::internal::kEmptyString) {
    mailaddress_->clear();
  }
  clear_has_mailaddress();
}
inline const ::std::string& PVPGradeOrderRequest::mailaddress() const {
  return *mailaddress_;
}
inline void PVPGradeOrderRequest::set_mailaddress(const ::std::string& value) {
  set_has_mailaddress();
  if (mailaddress_ == &::google::protobuf::internal::kEmptyString) {
    mailaddress_ = new ::std::string;
  }
  mailaddress_->assign(value);
}
inline void PVPGradeOrderRequest::set_mailaddress(const char* value) {
  set_has_mailaddress();
  if (mailaddress_ == &::google::protobuf::internal::kEmptyString) {
    mailaddress_ = new ::std::string;
  }
  mailaddress_->assign(value);
}
inline void PVPGradeOrderRequest::set_mailaddress(const char* value, size_t size) {
  set_has_mailaddress();
  if (mailaddress_ == &::google::protobuf::internal::kEmptyString) {
    mailaddress_ = new ::std::string;
  }
  mailaddress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPGradeOrderRequest::mutable_mailaddress() {
  set_has_mailaddress();
  if (mailaddress_ == &::google::protobuf::internal::kEmptyString) {
    mailaddress_ = new ::std::string;
  }
  return mailaddress_;
}
inline ::std::string* PVPGradeOrderRequest::release_mailaddress() {
  clear_has_mailaddress();
  if (mailaddress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mailaddress_;
    mailaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PVPGradeOrderResponse_PVPGradeOrderVO

// optional int32 pvp_grade_order = 1;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_pvp_grade_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_pvp_grade_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_pvp_grade_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_pvp_grade_order() {
  pvp_grade_order_ = 0;
  clear_has_pvp_grade_order();
}
inline ::google::protobuf::int32 PVPGradeOrderResponse_PVPGradeOrderVO::pvp_grade_order() const {
  return pvp_grade_order_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_pvp_grade_order(::google::protobuf::int32 value) {
  set_has_pvp_grade_order();
  pvp_grade_order_ = value;
}

// optional int32 pvp_order_change_flag = 2;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_pvp_order_change_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_pvp_order_change_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_pvp_order_change_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_pvp_order_change_flag() {
  pvp_order_change_flag_ = 0;
  clear_has_pvp_order_change_flag();
}
inline ::google::protobuf::int32 PVPGradeOrderResponse_PVPGradeOrderVO::pvp_order_change_flag() const {
  return pvp_order_change_flag_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_pvp_order_change_flag(::google::protobuf::int32 value) {
  set_has_pvp_order_change_flag();
  pvp_order_change_flag_ = value;
}

// optional int32 pvp_order_change_count = 3;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_pvp_order_change_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_pvp_order_change_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_pvp_order_change_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_pvp_order_change_count() {
  pvp_order_change_count_ = 0;
  clear_has_pvp_order_change_count();
}
inline ::google::protobuf::int32 PVPGradeOrderResponse_PVPGradeOrderVO::pvp_order_change_count() const {
  return pvp_order_change_count_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_pvp_order_change_count(::google::protobuf::int32 value) {
  set_has_pvp_order_change_count();
  pvp_order_change_count_ = value;
}

// optional int32 level = 4;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PVPGradeOrderResponse_PVPGradeOrderVO::level() const {
  return level_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional string nickname = 5;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_nickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_nickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& PVPGradeOrderResponse_PVPGradeOrderVO::nickname() const {
  return *nickname_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPGradeOrderResponse_PVPGradeOrderVO::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    nickname_ = new ::std::string;
  }
  return nickname_;
}
inline ::std::string* PVPGradeOrderResponse_PVPGradeOrderVO::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 pvp_grade = 6;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_pvp_grade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_pvp_grade() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_pvp_grade() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_pvp_grade() {
  pvp_grade_ = 0;
  clear_has_pvp_grade();
}
inline ::google::protobuf::int32 PVPGradeOrderResponse_PVPGradeOrderVO::pvp_grade() const {
  return pvp_grade_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_pvp_grade(::google::protobuf::int32 value) {
  set_has_pvp_grade();
  pvp_grade_ = value;
}

// optional string mail_address = 7;
inline bool PVPGradeOrderResponse_PVPGradeOrderVO::has_mail_address() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_has_mail_address() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_has_mail_address() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::clear_mail_address() {
  if (mail_address_ != &::google::protobuf::internal::kEmptyString) {
    mail_address_->clear();
  }
  clear_has_mail_address();
}
inline const ::std::string& PVPGradeOrderResponse_PVPGradeOrderVO::mail_address() const {
  return *mail_address_;
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_mail_address(const ::std::string& value) {
  set_has_mail_address();
  if (mail_address_ == &::google::protobuf::internal::kEmptyString) {
    mail_address_ = new ::std::string;
  }
  mail_address_->assign(value);
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_mail_address(const char* value) {
  set_has_mail_address();
  if (mail_address_ == &::google::protobuf::internal::kEmptyString) {
    mail_address_ = new ::std::string;
  }
  mail_address_->assign(value);
}
inline void PVPGradeOrderResponse_PVPGradeOrderVO::set_mail_address(const char* value, size_t size) {
  set_has_mail_address();
  if (mail_address_ == &::google::protobuf::internal::kEmptyString) {
    mail_address_ = new ::std::string;
  }
  mail_address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPGradeOrderResponse_PVPGradeOrderVO::mutable_mail_address() {
  set_has_mail_address();
  if (mail_address_ == &::google::protobuf::internal::kEmptyString) {
    mail_address_ = new ::std::string;
  }
  return mail_address_;
}
inline ::std::string* PVPGradeOrderResponse_PVPGradeOrderVO::release_mail_address() {
  clear_has_mail_address();
  if (mail_address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mail_address_;
    mail_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PVPGradeOrderResponse

// optional sint32 result = 1 [default = 0];
inline bool PVPGradeOrderResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PVPGradeOrderResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PVPGradeOrderResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PVPGradeOrderResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 PVPGradeOrderResponse::result() const {
  return result_;
}
inline void PVPGradeOrderResponse::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional string info = 2;
inline bool PVPGradeOrderResponse::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PVPGradeOrderResponse::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PVPGradeOrderResponse::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PVPGradeOrderResponse::clear_info() {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& PVPGradeOrderResponse::info() const {
  return *info_;
}
inline void PVPGradeOrderResponse::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void PVPGradeOrderResponse::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void PVPGradeOrderResponse::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PVPGradeOrderResponse::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  return info_;
}
inline ::std::string* PVPGradeOrderResponse::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .message.PVPGradeOrderResponse.PVPGradeOrderVO pvp_grade_OrderVOList = 3;
inline int PVPGradeOrderResponse::pvp_grade_ordervolist_size() const {
  return pvp_grade_ordervolist_.size();
}
inline void PVPGradeOrderResponse::clear_pvp_grade_ordervolist() {
  pvp_grade_ordervolist_.Clear();
}
inline const ::message::PVPGradeOrderResponse_PVPGradeOrderVO& PVPGradeOrderResponse::pvp_grade_ordervolist(int index) const {
  return pvp_grade_ordervolist_.Get(index);
}
inline ::message::PVPGradeOrderResponse_PVPGradeOrderVO* PVPGradeOrderResponse::mutable_pvp_grade_ordervolist(int index) {
  return pvp_grade_ordervolist_.Mutable(index);
}
inline ::message::PVPGradeOrderResponse_PVPGradeOrderVO* PVPGradeOrderResponse::add_pvp_grade_ordervolist() {
  return pvp_grade_ordervolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::message::PVPGradeOrderResponse_PVPGradeOrderVO >&
PVPGradeOrderResponse::pvp_grade_ordervolist() const {
  return pvp_grade_ordervolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::message::PVPGradeOrderResponse_PVPGradeOrderVO >*
PVPGradeOrderResponse::mutable_pvp_grade_ordervolist() {
  return &pvp_grade_ordervolist_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PVPGradeOrder_2eproto__INCLUDED
